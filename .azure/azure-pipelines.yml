trigger:
  - main

pool:
  vmImage: "ubuntu-latest"

variables:
  npm_config_cache: $(Pipeline.Workspace)/.npm

stages:
  - stage: Build
    jobs:
      - job: BuildContainers
        steps:
          - task: DockerCompose@0
            inputs:
              dockerComposeFile: docker-compose.prod.yml
              action: Build services

  - stage: Test
    dependsOn: Build
    jobs:
      - job: RunTests
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "23.x"
            displayName: "Install Node.js"

          - task: Cache@2
            inputs:
              key: 'npm | "$(Agent.OS)" | package-lock.json'
              path: $(npm_config_cache)
            displayName: "Cache npm packages"

          - script: |
              npm ci
              cd backend && npm ci
              cd ../frontend && npm ci
              npx playwright install --with-deps chromium
            displayName: "Install dependencies"

          - script: |
              npm run test:unit --workspace=backend
            displayName: "Run backend tests"

          - script: |
              npm run test:components
            displayName: "Run frontend component tests"

          - script: |
              npm run test:integration
              npm run test:e2e
            displayName: "Run integration and E2E tests"

          - task: PublishTestResults@2
            inputs:
              testResultsFormat: "JUnit"
              testResultsFiles: "test-results/*.xml"
              mergeTestResults: true
              testRunTitle: "BARtype Test Results"
            displayName: "Publish test results"
            condition: always()

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: "test-results"
              artifact: "test-results"
              publishLocation: "pipeline"
            displayName: "Publish test artifacts"
            condition: always()

  stage: Deploy
    dependsOn: Test
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - deployment: Production
        environment: production
        strategy:
          runOnce:
            deploy:
              steps:
                - template: deployment.yml
                  parameters:
                    environment: production